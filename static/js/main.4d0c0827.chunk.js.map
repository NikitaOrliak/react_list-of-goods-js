{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","REVERSE","App","_useState","useState","_useState2","_slicedToArray","sortField","setSortField","_useState3","_useState4","reverseField","setReverseField","visibleGoods","goods","_ref","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","_jsxs","className","children","_jsx","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SACjBC,EAAU,UA2BT,IAAMC,EAAM,WACjB,IAAAC,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAwCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EA7BR,SAA0BC,EAAKC,GAAgC,IAA5BR,EAASQ,EAATR,UAAWI,EAAYI,EAAZJ,aACxCK,EAAaC,YAAOH,GAqBxB,OAnBIP,GACFS,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQb,GACN,KAAKR,EACH,OAAOoB,EAAME,cAAcD,GAE7B,KAAKpB,EACH,OAAOmB,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,EAEb,IAGEX,IACFK,EAAgBA,EAAcO,WAGzBP,CACT,CAMuBQ,CACnB1B,EACA,CAAES,YAAWI,iBAGf,OACEc,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,iBAAkB,CAC9B,WAAYvB,IAAcR,IAE5BgC,QAAS,kBAAMvB,EAAaT,EAAiB,EAAC4B,SAC/C,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,oBAAqB,CACjC,WAAYvB,IAAcP,IAE5B+B,QAAS,kBAAMvB,EAAaR,EAAe,EAAC2B,SAC7C,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAWI,IAAG,oBAAqB,CACjC,WAAYnB,IAAiBV,IAE/B8B,QAAS,kBAAMnB,EACbD,IAAiBV,EAAU,GAAKA,EACjC,EAAC0B,SACH,aAKgB,KAAdpB,GAAqC,KAAjBI,IAErBiB,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QAAS,WACPvB,EAAa,IACbI,EAAgB,GAClB,EAAEe,SACH,aAQLC,cAAA,MAAAD,SAEId,EAAamB,KAAI,SAAAC,GAAI,OACnBL,cAAA,MACE,UAAQ,OAAMD,SAGbM,GAFIA,EAGF,QAMjB,ECxHAC,IAASC,OACPP,cAAC1B,EAAG,IACJkC,SAASC,eAAe,Q","file":"static/js/main.4d0c0827.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, { sortField, reverseField }) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState('');\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortField, reverseField },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_BY_ALPHABET,\n          })}\n          onClick={() => setSortField(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': reverseField !== REVERSE,\n          })}\n          onClick={() => setReverseField(\n            reverseField === REVERSE ? '' : REVERSE,\n          )}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField !== '' || reverseField !== '')\n          && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverseField('');\n            }}\n          >\n            Reset\n          </button>\n          )\n        }\n\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}